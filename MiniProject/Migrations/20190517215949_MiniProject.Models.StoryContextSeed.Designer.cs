// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProject.Models;

namespace MiniProject.Migrations
{
    [DbContext(typeof(GoalContext))]
    [Migration("20190517215949_MiniProject.Models.StoryContextSeed")]
    partial class MiniProjectModelsStoryContextSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MiniProject.Models.Goal", b =>
                {
                    b.Property<long>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GoalName");

                    b.HasKey("GoalId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            GoalId = 1L,
                            GoalName = "Find Product"
                        },
                        new
                        {
                            GoalId = 2L,
                            GoalName = "Select Product"
                        },
                        new
                        {
                            GoalId = 3L,
                            GoalName = "Buy Product"
                        });
                });

            modelBuilder.Entity("MiniProject.Models.Step", b =>
                {
                    b.Property<long>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GoalId");

                    b.Property<string>("StepName");

                    b.HasKey("StepId");

                    b.HasIndex("GoalId");

                    b.ToTable("Steps");

                    b.HasData(
                        new
                        {
                            StepId = 1L,
                            GoalId = 1L,
                            StepName = "visit website"
                        },
                        new
                        {
                            StepId = 2L,
                            GoalId = 1L,
                            StepName = "search product"
                        },
                        new
                        {
                            StepId = 3L,
                            GoalId = 1L,
                            StepName = "order search results"
                        },
                        new
                        {
                            StepId = 4L,
                            GoalId = 2L,
                            StepName = "order product detail"
                        },
                        new
                        {
                            StepId = 5L,
                            GoalId = 2L,
                            StepName = "compare product"
                        },
                        new
                        {
                            StepId = 6L,
                            GoalId = 3L,
                            StepName = "sign up"
                        },
                        new
                        {
                            StepId = 7L,
                            GoalId = 3L,
                            StepName = "add to basket"
                        },
                        new
                        {
                            StepId = 8L,
                            GoalId = 3L,
                            StepName = "place order"
                        },
                        new
                        {
                            StepId = 9L,
                            GoalId = 3L,
                            StepName = "make payment"
                        });
                });

            modelBuilder.Entity("MiniProject.Models.Story", b =>
                {
                    b.Property<long>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ReleaseId");

                    b.Property<long>("StepId");

                    b.Property<string>("StoryName");

                    b.HasKey("StoryId");

                    b.HasIndex("StepId");

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            StoryId = 1L,
                            ReleaseId = 1,
                            StepId = 1L,
                            StoryName = "Static website from template"
                        },
                        new
                        {
                            StoryId = 2L,
                            ReleaseId = 1,
                            StepId = 2L,
                            StoryName = "open standard search panel"
                        },
                        new
                        {
                            StoryId = 3L,
                            ReleaseId = 1,
                            StepId = 2L,
                            StoryName = "search by name"
                        },
                        new
                        {
                            StoryId = 4L,
                            ReleaseId = 2,
                            StepId = 2L,
                            StoryName = "open detailed search panel"
                        },
                        new
                        {
                            StoryId = 5L,
                            ReleaseId = 2,
                            StepId = 2L,
                            StoryName = "search by category"
                        },
                        new
                        {
                            StoryId = 6L,
                            ReleaseId = 2,
                            StepId = 2L,
                            StoryName = "search by brand"
                        },
                        new
                        {
                            StoryId = 7L,
                            ReleaseId = 2,
                            StepId = 3L,
                            StoryName = "order by price"
                        },
                        new
                        {
                            StoryId = 8L,
                            ReleaseId = 1,
                            StepId = 4L,
                            StoryName = "standard product data sheet"
                        },
                        new
                        {
                            StoryId = 9L,
                            ReleaseId = 1,
                            StepId = 6L,
                            StoryName = "sign up with regular account"
                        },
                        new
                        {
                            StoryId = 10L,
                            ReleaseId = 1,
                            StepId = 7L,
                            StoryName = "add to basket"
                        },
                        new
                        {
                            StoryId = 11L,
                            ReleaseId = 1,
                            StepId = 8L,
                            StoryName = "add shipping address"
                        },
                        new
                        {
                            StoryId = 12L,
                            ReleaseId = 1,
                            StepId = 8L,
                            StoryName = "choose shipping method"
                        },
                        new
                        {
                            StoryId = 13L,
                            ReleaseId = 1,
                            StepId = 9L,
                            StoryName = "pay by bank transaction"
                        },
                        new
                        {
                            StoryId = 14L,
                            ReleaseId = 2,
                            StepId = 9L,
                            StoryName = "pay by bank card"
                        },
                        new
                        {
                            StoryId = 15L,
                            ReleaseId = 2,
                            StepId = 9L,
                            StoryName = "pay by PayPal"
                        });
                });

            modelBuilder.Entity("MiniProject.Models.Step", b =>
                {
                    b.HasOne("MiniProject.Models.Goal", "Goal")
                        .WithMany("Steps")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MiniProject.Models.Story", b =>
                {
                    b.HasOne("MiniProject.Models.Step", "Step")
                        .WithMany()
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
